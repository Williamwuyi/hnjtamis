<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	<bean id="TrainRecordListAction"
		class="cn.com.ite.hnjtamis.train.record.TrainRecordListAction"
		scope="prototype">
		<property name="service" ref="trainRecordService" />
		<!--<property name="trainOnlineService" ref="trainOnlineService" />-->
	</bean>
	<bean id="TrainRecordFormAction"
		class="cn.com.ite.hnjtamis.train.record.TrainRecordFormAction"
		scope="prototype">
		<property name="service" ref="trainRecordService" />
		<!--<property name="trainOnlineService" ref="trainOnlineService" />-->
	</bean>
	<bean id="trainRecordService"
		class="cn.com.ite.hnjtamis.train.record.TrainRecordServiceImpl"
		scope="prototype">
		<property name="dao" ref="trainRecordDao" />
	</bean>
	<bean id="trainRecordDao" class="cn.com.ite.eap2.core.hibernate.HibernateDefaultDAOImpl"
		scope="prototype">
		<property name="template" ref="template" />
		<property name="pagingHandler" ref="oraclePagingHandler" />
		<property name="entityClass" value="cn.com.ite.hnjtamis.train.domain.TrainOnlineRecord" />
		<property name="hqlMap">
			<map>
				<entry key="queryHql">
					<value>
		            <![CDATA[
		            from TrainOnlineRecord t
		            where (t.trainOnline.studentId = :studentId or :studentId is null)
		              and (t.trainOnline.id = :trainIdTerm or :trainIdTerm is null)
		               order by t.startTime desc
		            ]]></value>
				</entry>
				<entry key="queryRecord">
					<value>
		            <![CDATA[
		            from TrainOnlineRecord t
		            where t.trainOnline.id = :trainIdTerm and t.leafId = :leafIdTerm and t.endTime is null
		            order by t.startTime desc
		            ]]></value>
				</entry>
			</map>
		</property>
		<property name="sqlMap">
			<map>
				<entry key="">
					<value>
						<![CDATA[
							select distinct f.acce_id,
							                f.file_path,
							                f.file_name,
							                cd.is_required,
							                min(tr.start_time) start_time,
							                max(tr.end_time) end_time,
							                count(tr.train_id) traincount
							  from train_online_record    tr,
							       train_online           tl,
							       train_implement        ti,
							       train_implement_course tic,
							       courseware_distribute  cd,
							       courseware             cw,
							       accessory_file         f
							 where tr.train_id(+) = tl.train_id
							   and tl.impl_id = ti.impl_id
							   and ti.impl_id = tic.impl_id
							   and tic.md_id = cd.md_id
							   and cd.course_id = cw.course_id
							   and cw.course_id = f.item_id
							   and tl.train_id = :trainIdTerm
							 group by f.acce_id, f.file_path, f.file_name, cd.is_required
						]]>
					</value>
				</entry>
			</map>
		</property>
	</bean>
</beans>