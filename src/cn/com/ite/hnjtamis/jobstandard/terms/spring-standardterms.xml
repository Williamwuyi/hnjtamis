<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
		<bean id="StandardTermsListAction" class="cn.com.ite.hnjtamis.jobstandard.terms.StandardTermsListAction" scope="prototype" >
		    <property name="service" ref="standardtermsServer" />
		</bean>
		<bean id="StandardTermsFormAction" class="cn.com.ite.hnjtamis.jobstandard.terms.StandardTermsFormAction" scope="prototype" >
		    <property name="service" ref="standardtermsServer" />
		</bean>
		<bean id="standardtermsServer" class="cn.com.ite.hnjtamis.jobstandard.terms.StandardTermsServiceImpl" scope="prototype">
		    <property name="dao" ref="standardtermsDao" />
		    <property name="jobunionstandardServer" ref="jobunionstandardServer" />
		</bean>
		<bean id="standardtermsDao" class="cn.com.ite.hnjtamis.jobstandard.terms.StandardTermsDaoImpl" scope="prototype">
		    <property name="template" ref="template" />
		    <property name="pagingHandler" ref="oraclePagingHandler"/>
		    <property name="entityClass" value="cn.com.ite.hnjtamis.jobstandard.domain.StandardTerms"/>
		    <property name="hqlMap">
		        <map>
		            <entry key="queryHql">
		            <value>
		            <![CDATA[
		             from StandardTerms t where (:nameTerm is null or standardname like '%'||:nameTerm||'%' )
		             and (:typenameTerm is null or t.standardTypes.jstypeid = :typenameTerm)
		             and (:parentNameTerm is null or t.standardTypes.parentSpeciltype.jstypeid = :parentNameTerm)
		             and t.standardid in (
		                 select v.standardTerms.standardid from JobsUnionStandard v where  (v.jobscode = :quarterIdTerm or :quarterIdTerm is null))
		             and  t.standardid in (
		                 select v.standardTerms.standardid from JobsStandardQuarter v where  (v.quarterTrainCode = :quarterStandardIdTerm or :quarterStandardIdTerm is null))
		             and t.status<>3
		             order by orderno,standardname
		            ]]></value>
		            </entry>
		            <entry key="queryTreeHql">
		            <value>
		            <![CDATA[
		            select a.standardid as id,a.standardname as title,a.standardTypes.jstypeid as parentId,'standardtype' as type,
		            a.standardTypes.typename as tagName,a.orderno as orderNo 
		            from StandardTerms a where (a.standardname like '%'||:nameTerm||'%' or :nameTerm is null) 
		            and a.status<>3
		            and a.isavailable<>0
		            order by a.orderno
		            ]]></value>
		            </entry>
		            <entry key="queryQuarterStandard">
		            <value>
		            <![CDATA[
		             from QuarterStandard t order by t.sortNum,t.quarterCode
		            ]]></value>
		            </entry>
		            <entry key="queryStandardTypes">
		            <value>
		            <![CDATA[
		             from StandardTypes t where t.isavailable = 1 order by t.orderno
		            ]]></value>
		            </entry>
		            <entry key="queryJobsUnionStandardNotAvailable">
		            <value>
		            <![CDATA[
		             from JobsUnionStandard t where t.isavailable = 0 and t.standardTerms.standardid = :standardid
		            ]]></value>
		            </entry>
		            
		            <entry key="modeltree">
		            <value>
		            <![CDATA[
		             from StandardTypes t where 
		              t.status <> 3
		             and t.isavailable <> 0
		             order by t.orderno
		            ]]></value>
		            </entry>
		            
		       </map>
		   </property>
		   
		   <property name="sqlMap">
		        <map>
		        	<entry key="queryIndexStandAndReferSql">
			            <value>
				            <![CDATA[
				               select t.* from jobs_standard t where exists(
								  select 1 from  jobs_union_standard jt
								     where t.standardid=jt.standardid
								     and jt.isavailable='1'
								     and jt.status<>'3'
								     and jt.jobscode=:quarterId
								) and t.status<>'3' and t.isavailable='1'  order by t.orderno
				            ]]>
			            </value>
		            </entry>
		            <entry key="bakqueryIndexStandAndReferSql">
			            <value>
				            <![CDATA[
				               select t.* from jobs_standard t,jobs_union_standard jt
								where t.standardid=jt.standardid
								and t.isavailable='1'
		                        and t.status<>'3'
		                        and jt.isavailable='1'
		                        and jt.status<>'3'
								and jt.jobscode=:quarterId
				            ]]>
			            </value>
		            </entry>
		            <entry key="indexTkSql">
			            <value>
				            <![CDATA[
					            select b.*
									  from theme_bank b
									 where exists (select 1
									          from jobs_standard_quarter t 
									         where t.theme_bank_id = b.theme_bank_id
									           and t.quarter_train_code = :quarter_train_code)
									   and exists (select 1
									          from theme_in_bank ii
									         where ii.theme_bank_id = b.theme_bank_id
									           and ii.theme_id is not null)
									    and (b.bank_public = '10' or (b.bank_public = '20' and b.organ_id = :organId))
									    and b.bank_type = '10' and b.is_l = '10' order by b.theme_bank_code
				            ]]>
			            </value>
		            </entry>
		            <entry key="bakindexTkSql">
			            <value>
				            <![CDATA[
					            select b.* from jobs_standard t,jobs_union_standard jt,theme_bank b
				                where t.standardid=jt.standardid 
				                and t.theme_bank_id=b.theme_bank_id
				                and t.isavailable='1'
		                        and t.status<>'3'
		                        and jt.isavailable='1'
		                        and jt.status<>'3'
				                and jt.jobscode=:jobscode
				            ]]>
			            </value>
		            </entry>
		        </map>
		    </property>
		    
		</bean>
</beans>