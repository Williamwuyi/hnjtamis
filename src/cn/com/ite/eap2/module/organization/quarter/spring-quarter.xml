<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
		<bean id="QuarterListAction" class="cn.com.ite.eap2.module.organization.quarter.QuarterListAction" scope="prototype" >
		    <property name="service" ref="quarterServer" />
		</bean>
		<bean id="QuarterFormAction" class="cn.com.ite.eap2.module.organization.quarter.QuarterFormAction" scope="prototype" >
		    <property name="service" ref="quarterServer" />
		    <property name="standardtermsServer" ref="standardtermsServer" />
		</bean>
		<bean id="quarterServer" class="cn.com.ite.eap2.module.organization.quarter.QuarterServiceImpl" scope="prototype">
		    <property name="dao" ref="quarterDao" />
		    <property name="ds" ref="deptServer" />
		</bean>
		<bean id="quarterDao" class="cn.com.ite.eap2.core.hibernate.HibernateDefaultDAOImpl" scope="prototype">
		    <property name="template" ref="template" />
		    <property name="pagingHandler" ref="oraclePagingHandler"/>
		    <property name="entityClass" value="cn.com.ite.eap2.domain.organization.Quarter"/>
		    <property name="hqlMap">
		        <map>
		            <entry key="queryHql">
		            <value>
		            <![CDATA[
		             from Quarter t 
		            where (t.quarterName like '%'||:nameTerm||'%' or :nameTerm is null)
		              and (t.quarterType = :typeTerm or :typeTerm is null)
		              and (t.quarterCode = :codeTerm or :codeTerm is null)
		              and (t.dept.deptId = :deptTerm or :deptTerm is null)
		              and (t.dept.organ.organId = :organTerm or :organTerm is null)
		              and (t.validation = :valid or :valid is null)
		              order by t.orderNo 
		            ]]></value>
		            </entry>
		            <entry key="querySubHql">
		            <value>
		            <![CDATA[
		             from Quarter t 
		             where (t.quarter = (select a.quarter from Quarter a where a.quarterId=:parentId) 
		                or (:parentId is null and t.quarter is null)
		                or (t.quarter is null and (select a.quarter from Quarter a where a.quarterId=:parentId) is null))
		              and (t.dept.deptId = :deptTerm or :deptTerm is null)
		              and (t.dept.organ.organId = :organTerm or :organTerm is null)
		            order by t.orderNo
		            ]]></value>
		            </entry>
		            
		             <entry key="quarterStandardHql">
		            <value>
		            <![CDATA[
		             from QuarterStandard t where t.belongType='10' or (t.belongType='20' and t.organId = :organId) order by t.sortNum,t.quarterCode
		            ]]></value>
		            </entry>
		            <entry key="quarterStandardByQCodeHql">
		            <value>
		            <![CDATA[
		             from QuarterStandard t where t.quarterCode = :quarterCode order by t.sortNum,t.quarterCode
		            ]]></value>
		            </entry>
		            
		            <entry key="quarterStandardByDeptNameAndQCodeHql">
		            <value>
		            <![CDATA[
		             from QuarterStandard t where t.deptName=:deptName and t.quarterCode = :quarterCode order by t.sortNum,t.quarterCode
		            ]]></value>
		            </entry>
		            
		            <entry key="updateNewEmployeeTrainQuarter">
		            <value>
		            <![CDATA[
		             update Employee t set
					 t.quarterTrainCode = (select q.quarterTrainCode from Quarter q where q.quarterId = :quarterId1),
					 t.quarterTrainName = (select q.quarterTrainName from Quarter q where q.quarterId = :quarterId2),
					 t.quarterTrainId = (select q.quarterTrainId from Quarter q where q.quarterId = :quarterId3) 
					where  t.quarter.quarterId = :quarterId4
		            ]]></value>
		            </entry>
		       </map>
		   </property>
		   <property name="sqlMap">
		        <map>
		            <entry key="updateEmployeeDept">
		            <value>
		            <![CDATA[
		            update EMPLOYEE t set t.dept_id = (select q.dept_id from quarter q where q.quarter_id = t.quarter_id)
					where  exists(select 1 from quarter  qq where qq.dept_id <> t.dept_id and qq.quarter_id = t.quarter_id)
		            ]]></value>
		            </entry>
		       </map>
		   </property>
		</bean>
</beans>